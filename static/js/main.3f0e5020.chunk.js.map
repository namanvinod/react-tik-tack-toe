{"version":3,"sources":["core/components/Navbar.js","components/Square.js","components/Board.js","components/Game.js","components/About.js","components/MyProfile.js","core/components/RouteOutlet.js","App.js","index.js"],"names":["Navbar","className","to","Square","squareIndex","squareValue","squareAction","onClick","Board","squares","renderSquare","counter","winningCombination","Game","useState","Array","fill","setSquares","currentPlayer","setCurrentPlayer","winner","setWinner","useEffect","checkWinningConditions","endingGame","player","updateSquare","updatedSquares","updateCurrentPlayer","won","checkWinner","playerSquares","map","item","index","filter","String","length","some","combo","every","c","includes","square","About","MyProfile","RouteOutlet","exact","path","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f0e5020.chunk.js","sourcesContent":["import { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Navbar.css';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <Fragment>\r\n            <div className=\"nav-container\">\r\n                <ul><Link to=\"/\">Game</Link></ul>\r\n                <ul><Link to=\"/about\">About</Link></ul>\r\n                <ul className=\"nav-profile\"><Link to=\"/profile\">My Profile</Link></ul>\r\n            </div>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n\r\n","import './Square.css'\r\n\r\nconst Square = ({ squareIndex, squareValue, squareAction }) => {\r\n    return (\r\n        <button className={`square ${squareValue ? squareValue === 'X' ? 'first-player' : 'second-player' : ''}`} onClick={() => (squareAction(squareIndex))}>\r\n            {squareValue}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Square;","import Square from './Square';\r\nimport './Board.css';\r\n\r\nconst Board = ({ squares, squareAction }) => {\r\n    const renderSquare = counter => <Square\r\n                                        className=\"board-square\"\r\n                                        squareIndex={counter}\r\n                                        squareValue={squares[counter]}\r\n                                        squareAction={squareAction}\r\n                                    />;\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"board-row\">\r\n                {renderSquare(0)}\r\n                {renderSquare(1)}\r\n                {renderSquare(2)}\r\n            </div>\r\n            <div className=\"board-row\">\r\n                {renderSquare(3)}\r\n                {renderSquare(4)}\r\n                {renderSquare(5)}\r\n            </div>\r\n            <div className=\"board-row\">\r\n                {renderSquare(6)}\r\n                {renderSquare(7)}\r\n                {renderSquare(8)}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Board;","import { useState, useEffect } from \"react\";\r\n\r\nimport Board from \"./Board\";\r\nimport './Game.css';\r\n\r\nconst winningCombination = [\r\n    [0, 1, 2], [0, 3, 6], [0, 4, 8],\r\n    [1, 4, 7], [2, 5, 8], [2, 4, 6],\r\n    [3, 4, 5], [6, 7, 8]\r\n];\r\n\r\nconst Game = () => {\r\n    const [squares, setSquares] = useState(Array(9).fill(null));\r\n    const [currentPlayer, setCurrentPlayer] = useState('X');\r\n    const [winner, setWinner] = useState(null);\r\n    \r\n    useEffect(() => (checkWinningConditions()), [squares]);\r\n\r\n    const endingGame = (player = 'NONE') => (setWinner(player));\r\n    \r\n\r\n    const updateGameState = counter => {\r\n        if(checkWinningConditions() || squares[counter]) {\r\n            return;\r\n        }\r\n\r\n        updateSquare(counter);\r\n        updateCurrentPlayer();\r\n    };\r\n\r\n    const updateSquare = counter => {\r\n        const updatedSquares = [...squares];\r\n        updatedSquares[counter] = currentPlayer;\r\n        setSquares(updatedSquares);\r\n    };\r\n\r\n    const updateCurrentPlayer = () => (setCurrentPlayer(currentPlayer === 'X' ? 'O': 'X'));\r\n    \r\n    const checkWinningConditions = () => {\r\n        let won = checkWinner('X');\r\n        if(!won) {\r\n           won = checkWinner('O');\r\n        }\r\n        return won;\r\n    };\r\n\r\n    const checkWinner = (player) => {\r\n        let won = false;\r\n        const playerSquares = squares.map((item, index) => item === player ? index : '').filter(String);\r\n        if(playerSquares && playerSquares.length >= 3) {\r\n            winningCombination.some(combo => {\r\n                won = combo.every(c => playerSquares.includes(c));     \r\n                if(won) {\r\n                    endingGame(player);\r\n                    return true;\r\n                }\r\n                if(!won && squares.every(square => square)) {\r\n                    endingGame();\r\n                    return true;\r\n                }\r\n                return false;\r\n            })\r\n        }\r\n        return won;\r\n    }\r\n\r\n    return (\r\n        <div className=\"game\">\r\n          <div className=\"game-board\">\r\n            <Board \r\n                squares={squares}\r\n                squareAction={updateGameState}\r\n            />\r\n          </div>\r\n          <div className=\"game-info\">\r\n            <div>\r\n                {winner ? \r\n                        winner === 'NONE' ? 'Game is drawn': `Game is won by ${winner}`\r\n                        : squares.every(square => square) \r\n                            ? '' : `Current Player: ${currentPlayer}`}\r\n            </div>\r\n          </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Game;","const About = () => {\r\n    return (\r\n        <div>This is About Page of Tick Tack Toe</div>\r\n    );\r\n};\r\n\r\nexport default About;","const MyProfile = () => {\r\n    return (\r\n        <div>This is My Profile</div>\r\n    );\r\n};\r\n\r\nexport default MyProfile;","import { Fragment } from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nimport Game from '../../components/Game';\r\nimport About from '../../components/About';\r\nimport MyProfile from '../../components/MyProfile';\r\n\r\nconst RouteOutlet = () => {\r\n    return (\r\n        <Fragment>\r\n            <Route exact path=\"/\" component={Game}></Route>\r\n            <Route exact path=\"/about\" component={About}></Route>\r\n            <Route exact path=\"/profile\" component={MyProfile}></Route>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default RouteOutlet;","import { HashRouter } from 'react-router-dom';\n\nimport './App.css';\n\nimport Navbar from './core/components/Navbar';\nimport RouterOutlet from './core/components/RouteOutlet';\n\nconst App = () => {\n  return (\n    <HashRouter>\n      <div className=\"app-container\">\n        <Navbar />\n        <RouterOutlet />\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}